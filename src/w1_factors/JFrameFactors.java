/*****************************************************************************
 *
 *       ____________
 *      /\  ________ \       
 *     /  \ \______/\ \
 *    / /\ \ \  / /\ \ \     
 *   / / /\ \ \/ / /\ \ \
 *  / / /__\ \ \/_/__\_\ \
 * / /_/____\ \___________\
 * \ \ \____/ / ________/ /
 *  \ \ \  / / /\ \  / / / 
 *   \ \ \/ / /\ \ \/ / / 
 *    \ \/ / /__\_\/ / /
 *     \  / /______\/ /
 *      \/___________/       
 *
 * Description : GUI for Factors
 * Date        : 2014 - July - 24
 * Author      : Arturo Alatriste Trujillo.
 ****************************************************************************/

package w1_factors;

import java.awt.*;
import java.awt.Component;
import java.util.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.JInternalFrame;
import javax.swing.JTable;

/**
 *
 * @author Arturo.Alatriste
 */
public class JFrameFactors extends javax.swing.JFrame {

    public RandomVarCollection vars = new RandomVarCollection();
    
    //public ArrayList<Factor>    factors;    
    public FactorCollection    factors;    
    
    public Map<Factor, JInternalFrame> factorFrame = new HashMap<Factor, JInternalFrame>();
    
    private int frameBorder = 30; //cascade Frame border
            
    //todo get a better gui:
    //  allow resize, move the windows.
    // http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html
    //  https://community.oracle.com/thread/1481095?start=0&tstart=0
    // http://www.java2s.com/Code/Java/Swing-JFC/InterestingthingsusingJInternalFramesJDesktopPaneandDesktopManager2.htm
    // http://www.java-tips.org/java-se-tips/javax.swing/how-to-tile-all-internal-frames-when-requested-2.html
    
    
    //todo allow create new vars in JFrame_RndVars
    
    //todo create : Pgm class
    
    
    /**
     * Creates new form JFrameFactors
     */
    public JFrameFactors(RandomVarCollection vars, FactorCollection factors ) {
        initComponents();
        
        this.vars    = vars;
        this.factors = factors;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnFactorProduct = new javax.swing.JButton();
        btnMarginalization = new javax.swing.JButton();
        btnLoadSamples = new javax.swing.JButton();
        btnCopyBtoA = new javax.swing.JButton();
        btnTest = new javax.swing.JButton();
        btnReduction = new javax.swing.JButton();
        desktop = new javax.swing.JDesktopPane();
        frameA = new javax.swing.JInternalFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        tFactorA = new javax.swing.JTable();
        frameB = new javax.swing.JInternalFrame();
        jScrollPane4 = new javax.swing.JScrollPane();
        tFactorB = new javax.swing.JTable();
        frameC = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tFactorC = new javax.swing.JTable();
        frameE = new javax.swing.JInternalFrame();
        jScrollPane5 = new javax.swing.JScrollPane();
        tFactorE = new javax.swing.JTable();
        frameD = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        tFactorD = new javax.swing.JTable();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        jInternalFrame4 = new javax.swing.JInternalFrame();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuWindows = new javax.swing.JMenu();
        jMenuItemMin = new javax.swing.JMenuItem();
        jMenuItemMax = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemHorTile = new javax.swing.JMenuItem();
        jMenuItemVerTile = new javax.swing.JMenuItem();
        jMenuItemTile = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItemCas_lt = new javax.swing.JMenuItem();
        jMenuItemCas_lb = new javax.swing.JMenuItem();
        jMenuItemCas_rt = new javax.swing.JMenuItem();
        jMenuItemCas_rb = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel6.setBackground(new java.awt.Color(0, 153, 0));
        jPanel6.setPreferredSize(new java.awt.Dimension(200, 755));

        btnNew.setText("New Factor");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnFactorProduct.setText("Factor Product");
        btnFactorProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFactorProductActionPerformed(evt);
            }
        });

        btnMarginalization.setText("Î£ Marginalization");
        btnMarginalization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarginalizationActionPerformed(evt);
            }
        });

        btnLoadSamples.setText("sample factors");
        btnLoadSamples.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadSamplesActionPerformed(evt);
            }
        });

        btnCopyBtoA.setText("copy from B to A");
        btnCopyBtoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopyBtoAActionPerformed(evt);
            }
        });

        btnTest.setText("test Load sample2");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        btnReduction.setText("Reduction");
        btnReduction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReductionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnCopyBtoA)
                        .addComponent(btnTest, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFactorProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                        .addComponent(btnLoadSamples))
                    .addComponent(btnMarginalization)
                    .addComponent(btnReduction))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCopyBtoA, btnFactorProduct, btnLoadSamples, btnMarginalization, btnReduction, btnTest});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLoadSamples)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFactorProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCopyBtoA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMarginalization, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReduction))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCopyBtoA, btnFactorProduct, btnLoadSamples, btnMarginalization, btnNew, btnReduction, btnTest});

        jSplitPane1.setLeftComponent(jPanel6);

        desktop.setBackground(new java.awt.Color(204, 0, 204));

        frameA.setIconifiable(true);
        frameA.setMaximizable(true);
        frameA.setTitle("Factor A");
        frameA.setAutoscrolls(true);
        frameA.setVisible(true);

        tFactorA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tFactorA.setName(""); // NOI18N
        jScrollPane3.setViewportView(tFactorA);

        javax.swing.GroupLayout frameALayout = new javax.swing.GroupLayout(frameA.getContentPane());
        frameA.getContentPane().setLayout(frameALayout);
        frameALayout.setHorizontalGroup(
            frameALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
        );
        frameALayout.setVerticalGroup(
            frameALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        frameB.setIconifiable(true);
        frameB.setMaximizable(true);
        frameB.setTitle("Factor B");
        frameB.setAutoscrolls(true);
        frameB.setVisible(true);

        tFactorB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"firulais", "garfield", "atun"},
                {"spike", "silvestre", "tiburon martillo"},
                {"neron", "tom", "pez espada"},
                {"boby", "picaro", "barracuda"}
            },
            new String [] {
                "1-perro", "2-gato", "3-pez"
            }
        ));
        jScrollPane4.setViewportView(tFactorB);

        javax.swing.GroupLayout frameBLayout = new javax.swing.GroupLayout(frameB.getContentPane());
        frameB.getContentPane().setLayout(frameBLayout);
        frameBLayout.setHorizontalGroup(
            frameBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
        );
        frameBLayout.setVerticalGroup(
            frameBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameBLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 53, Short.MAX_VALUE))
        );

        frameC.setIconifiable(true);
        frameC.setMaximizable(true);
        frameC.setTitle("Factor Product. C = A * B");
        frameC.setAutoscrolls(true);
        frameC.setVisible(true);

        tFactorC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tFactorC);

        javax.swing.GroupLayout frameCLayout = new javax.swing.GroupLayout(frameC.getContentPane());
        frameC.getContentPane().setLayout(frameCLayout);
        frameCLayout.setHorizontalGroup(
            frameCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        frameCLayout.setVerticalGroup(
            frameCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        frameE.setIconifiable(true);
        frameE.setMaximizable(true);
        frameE.setTitle("E = Reduction( eliminate where v3 Grade = C )");
        frameE.setAutoscrolls(true);
        frameE.setVisible(true);

        tFactorE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane5.setViewportView(tFactorE);

        javax.swing.GroupLayout frameELayout = new javax.swing.GroupLayout(frameE.getContentPane());
        frameE.getContentPane().setLayout(frameELayout);
        frameELayout.setHorizontalGroup(
            frameELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        frameELayout.setVerticalGroup(
            frameELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        frameD.setIconifiable(true);
        frameD.setMaximizable(true);
        frameD.setTitle("D = Marginalization( C, scope( v1, v3 )  )");
        frameD.setAutoscrolls(true);
        frameD.setVisible(true);

        tFactorD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane2.setViewportView(tFactorD);

        javax.swing.GroupLayout frameDLayout = new javax.swing.GroupLayout(frameD.getContentPane());
        frameD.getContentPane().setLayout(frameDLayout);
        frameDLayout.setHorizontalGroup(
            frameDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        frameDLayout.setVerticalGroup(
            frameDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameDLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 51, Short.MAX_VALUE))
        );

        jInternalFrame1.setIconifiable(true);
        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setTitle("6");
        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 66, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jInternalFrame2.setIconifiable(true);
        jInternalFrame2.setMaximizable(true);
        jInternalFrame2.setTitle("7");
        jInternalFrame2.setVisible(true);

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jInternalFrame3.setIconifiable(true);
        jInternalFrame3.setMaximizable(true);
        jInternalFrame3.setTitle("8");
        jInternalFrame3.setVisible(true);

        javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jInternalFrame4.setIconifiable(true);
        jInternalFrame4.setMaximizable(true);
        jInternalFrame4.setTitle("9");
        jInternalFrame4.setVisible(true);

        javax.swing.GroupLayout jInternalFrame4Layout = new javax.swing.GroupLayout(jInternalFrame4.getContentPane());
        jInternalFrame4.getContentPane().setLayout(jInternalFrame4Layout);
        jInternalFrame4Layout.setHorizontalGroup(
            jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 67, Short.MAX_VALUE)
        );
        jInternalFrame4Layout.setVerticalGroup(
            jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(frameA)
                    .addComponent(frameC))
                .addGap(18, 18, 18)
                .addGroup(desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(frameB)
                    .addComponent(frameE)
                    .addComponent(frameD))
                .addGap(28, 28, 28)
                .addGroup(desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jInternalFrame1)
                    .addComponent(jInternalFrame2)
                    .addComponent(jInternalFrame3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jInternalFrame4)
                .addContainerGap(306, Short.MAX_VALUE))
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(desktopLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(desktopLayout.createSequentialGroup()
                                .addComponent(jInternalFrame1)
                                .addGap(18, 18, 18)
                                .addComponent(jInternalFrame2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jInternalFrame3))
                            .addComponent(jInternalFrame4)))
                    .addGroup(desktopLayout.createSequentialGroup()
                        .addComponent(frameB)
                        .addGap(28, 28, 28)
                        .addComponent(frameE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(frameD))
                    .addGroup(desktopLayout.createSequentialGroup()
                        .addComponent(frameA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(frameC)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        desktop.setLayer(frameA, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(frameB, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(frameC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(frameE, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(frameD, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(jInternalFrame1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(jInternalFrame2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(jInternalFrame3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(jInternalFrame4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        try {
            jInternalFrame4.setIcon(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        jSplitPane1.setRightComponent(desktop);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenuWindows.setText("Windows");

        jMenuItemMin.setText("minimize all");
        jMenuItemMin.setName(""); // NOI18N
        jMenuItemMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMinActionPerformed(evt);
            }
        });
        jMenuWindows.add(jMenuItemMin);

        jMenuItemMax.setText("maximize all");
        jMenuItemMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMaxActionPerformed(evt);
            }
        });
        jMenuWindows.add(jMenuItemMax);
        jMenuWindows.add(jSeparator1);

        jMenuItemHorTile.setText("horizontal tile");
        jMenuItemHorTile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemHorTileActionPerformed(evt);
            }
        });
        jMenuWindows.add(jMenuItemHorTile);

        jMenuItemVerTile.setText("vertical tile");
        jMenuItemVerTile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVerTileActionPerformed(evt);
            }
        });
        jMenuWindows.add(jMenuItemVerTile);

        jMenuItemTile.setText("Square Tile");
        jMenuItemTile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTileActionPerformed(evt);
            }
        });
        jMenuWindows.add(jMenuItemTile);
        jMenuWindows.add(jSeparator2);

        jMenuItemCas_lt.setText("Cascade left top");
        jMenuItemCas_lt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCas_ltActionPerformed(evt);
            }
        });
        jMenuWindows.add(jMenuItemCas_lt);

        jMenuItemCas_lb.setText("Cascade left bottom");
        jMenuItemCas_lb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCas_lbActionPerformed(evt);
            }
        });
        jMenuWindows.add(jMenuItemCas_lb);

        jMenuItemCas_rt.setText("Cascade right top");
        jMenuItemCas_rt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCas_rtActionPerformed(evt);
            }
        });
        jMenuWindows.add(jMenuItemCas_rt);

        jMenuItemCas_rb.setText("Cascade right bottom");
        jMenuItemCas_rb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCas_rbActionPerformed(evt);
            }
        });
        jMenuWindows.add(jMenuItemCas_rb);

        jMenuBar1.add(jMenuWindows);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void LoadSample()
    {
        tFactorA.setValueAt( "Hola", 0, 0);
        Factor factor;
        
        
        ArrayList<RandomVar> varsA = new ArrayList<RandomVar>();
        varsA.add( vars.getByName("v1") );
        varsA.add( vars.getByName("v2") );
        varsA.add( vars.getByName("v3") );
        
        factor = new Factor( 0, "FactorA", varsA );
        factorFrame.put(factor, frameA);
        
        factor.FillTable();
        factor.print();
        factor.copyTo(tFactorA);
        this.repaint();
    }
    
    /**
     * Load sample 2. small factors: A, B.
     */
    public void test1()
    {
        ArrayList<RandomVar> varsA= new ArrayList<RandomVar>();
        varsA.add( vars.getByName("v1") );
        varsA.add( vars.getByName("v2") );        
        
        Factor factorA = new Factor( 0, "FactorA", varsA );
        factorFrame.put(factorA, frameA);
        factorA.FillTable();
        factorA.setProbability( new Float[] { 0.5F, 0.15F, 0.05F, 0.3F } );
        factorA.copyTo(tFactorA);

        ArrayList<RandomVar> varsB = new ArrayList<RandomVar>();
        varsB.add( vars.getByName("v2") );
        varsB.add( vars.getByName("v3") );        
        
        Factor factorB = new Factor( 0, "FactorB", varsB );
        factorFrame.put(factorB, frameB);
        factorB.FillTable();
        factorB.setProbability( new Float[] { 0.3F, 0.2F, 0.15F, 0.14F, 0.13F, 0.08F } );
        factorB.copyTo(tFactorB);
        this.repaint();
        
        factors.clear();
        factors.add( factorA );
        factors.add( factorB );
    }
    
    
    private void btnLoadSamplesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadSamplesActionPerformed
        LoadSample();        
    }//GEN-LAST:event_btnLoadSamplesActionPerformed

    private void btnCopyBtoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopyBtoAActionPerformed
        JTablex.copy(tFactorB, tFactorA);
        this.repaint();
    }//GEN-LAST:event_btnCopyBtoAActionPerformed

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        test1();
    }//GEN-LAST:event_btnTestActionPerformed

    private void btnFactorProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFactorProductActionPerformed

        // C = A * B
        Factor factorC = Factor.FactorProduct( factors.get(0) , factors.get(1) );
        factorC.print();
        
        
        factorFrame.put(factorC, frameC);
        factorC.copyTo(tFactorC);
        factors.add(factorC);
        this.repaint();
        
    }//GEN-LAST:event_btnFactorProductActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO test create new factor
        
        System.out.println( "btnNewActionPerformed" );
        
        System.out.println( "new factor" );
        
        Factor f = null;
        try 
        {
            // show gui
            JFrameNewFactor fData = new JFrameNewFactor( f, factors.generateId() );
            fData.setVisible( true );
            
            System.out.println( "dialog should be closed" );
            
            
            // put this in an event handler
            if (f != null )
            {
                System.out.println( "factor was created" );
                
                System.out.println( "adding frame to desktop" );
                JifFactor frame = new JifFactor( f.getName() );
                desktop.add(frame);
                
                
                System.out.println( "adding factor to FactorCollection" );
                factors.add(f);
                
                System.out.println( "filling table" );                
                f.FillTable();
                
                System.out.println( "copying table to frame" );                
                f.copyTo(frame);
                
                
                System.out.println( "refreshing" );
                desktop.repaint();
                this.repaint();
            }
            else
            {
                System.out.println( "factor is NULL" );
            }
                
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(JFrameFactors.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally
        {
            System.out.println( "end of New Factors" );
        }
        

    }//GEN-LAST:event_btnNewActionPerformed

    private void btnMarginalizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarginalizationActionPerformed
        // factorD = Marginalize C, scope(v1, v3 )
        // it means, delete column v2
        
        RandomVarCollection c = new RandomVarCollection();
        c.add( vars.get( 0 )  );
        c.add( vars.get( 2 )  );
        
        
        Factor factorD = Factor.Marginalization( factors.get( 2 ) , c);
        factorD.print();
        
        factorFrame.put( factorD, frameD );
        factorD.copyTo( tFactorD );
        factors.add(factorD);
        
    }//GEN-LAST:event_btnMarginalizationActionPerformed

    private void btnReductionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReductionActionPerformed
        
        // todo: create Reduction condition gui
        
        MarClauseSet cluseSet = new MarClauseSet();
        cluseSet.add( vars.get( 2 ) , "C");
        
        Factor factorE = Factor.Reduction( factors.get( 3 )  , cluseSet);
        factorE.print();
        
        factorFrame.put( factorE, frameE );
        factorE.copyTo( tFactorE );
        factors.add( factorE );
        
    }//GEN-LAST:event_btnReductionActionPerformed

    private void jMenuItemMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMinActionPerformed
        
//        for ( JInternalFrame f : desktop.getAllFrames() )
//        {
//            try
//            {
//                f.setIcon( true );
//            }
//            catch(Exception e)
//            {
//               System.out.println( e.getMessage() );
//            }
//            finally
//            {}
//        }        
        Framex.minimize(desktop);
        this.repaint();
    }//GEN-LAST:event_jMenuItemMinActionPerformed

    private void jMenuItemMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMaxActionPerformed
        
//        for ( JInternalFrame f : desktop.getAllFrames() )
//        {
//            try
//            {
//                f.setIcon( false );
//                f.setMaximum(true);
//            }
//            catch(Exception e)
//            {
//               System.out.println( e.getMessage() );
//            }
//            finally
//            {}
//        }    
        Framex.maximize(desktop);
        this.repaint();

    }//GEN-LAST:event_jMenuItemMaxActionPerformed

    private void jMenuItemCas_ltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCas_ltActionPerformed
        Framex.cascadelt(desktop, frameBorder);
        this.repaint();
    }//GEN-LAST:event_jMenuItemCas_ltActionPerformed

    private void jMenuItemCas_lbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCas_lbActionPerformed
        Framex.cascadelb(desktop, frameBorder);
        this.repaint();
    }//GEN-LAST:event_jMenuItemCas_lbActionPerformed

    private void jMenuItemCas_rtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCas_rtActionPerformed
        Framex.cascadert(desktop, frameBorder);
        this.repaint();
    }//GEN-LAST:event_jMenuItemCas_rtActionPerformed

    private void jMenuItemCas_rbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCas_rbActionPerformed
        Framex.cascaderb(desktop, frameBorder);
        this.repaint();
    }//GEN-LAST:event_jMenuItemCas_rbActionPerformed

    private void jMenuItemHorTileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemHorTileActionPerformed

        Framex.tileHor(desktop);
        this.repaint();
    }//GEN-LAST:event_jMenuItemHorTileActionPerformed

    private void jMenuItemVerTileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVerTileActionPerformed
        Framex.tileVer(desktop);
        this.repaint();
    }//GEN-LAST:event_jMenuItemVerTileActionPerformed

    private void jMenuItemTileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTileActionPerformed
        Framex.tileSqr(desktop);
        this.repaint();
    }//GEN-LAST:event_jMenuItemTileActionPerformed

    
    private void cascadert(JDesktopPane d, int border)
    {
        int n=0; // number of open frames
        for ( JInternalFrame f : d.getAllFrames() )
        {
            if ( f.isIcon() == false )
            {
                n++;
            }
        }
        
        int w = d.getWidth()  - border * (n-1);
        int h = d.getHeight() - border * (n-1);
        int x = border * n;
        int y = 0 - border;
        
        for ( JInternalFrame f : d.getAllFrames() )
        {
            try
            {
                if ( f.isIcon() == true )
                {
                    continue;
                }
                x -= border;
                y += border;
                f.setIcon( false );
                f.setMaximum(false);
                f.reshape(x, y, w, h);
            }
            catch(Exception e)
            {
               System.out.println( e.getMessage() );
            }
            finally
            {}
        }    
    }
    
    private void cascadelb(JDesktopPane d, int border)
    {
        int n=0; // number of open frames
        for ( JInternalFrame f : d.getAllFrames() )
        {
            if ( f.isIcon() == false )
            {
                n++;
            }
        }
        
        int w = d.getWidth()  - border * (n-1);
        int h = d.getHeight() - border * (n-1);
        
        int x = 0 - border;
        int y = border * n;
        
        for ( JInternalFrame f : d.getAllFrames() )
        {
            try
            {
                if ( f.isIcon() == true )
                {
                    continue;
                }
                x += border;
                y -= border;
                f.setIcon( false );
                f.setMaximum(false);
                f.reshape(x, y, w, h);
            }
            catch(Exception e)
            {
               System.out.println( e.getMessage() );
            }
            finally
            {}
        }    
    }
    
    private void cascaderb(JDesktopPane d, int border)
    {
        int n=0; // number of open frames
        for ( JInternalFrame f : d.getAllFrames() )
        {
            if ( f.isIcon() == false )
            {
                n++;
            }
        }
        
        int w = d.getWidth()  - border * (n-1);
        int h = d.getHeight() - border * (n-1);
        
        int x = border * n;
        int y = border * n;
        
        for ( JInternalFrame f : d.getAllFrames() )
        {
            try
            {
                if ( f.isIcon() == true )
                {
                    continue;
                }
                x -= border;
                y -= border;
                
                f.setIcon( false );
                f.setMaximum(false);
                f.reshape(x, y, w, h);
            }
            catch(Exception e)
            {
               System.out.println( e.getMessage() );
            }
            finally
            {}
        }    
    }
    
    private void cascadelt(JDesktopPane d, int border)
    {
        int n=0; // number of open frames
        for ( JInternalFrame f : d.getAllFrames() )
        {
            if ( f.isIcon() == false )
            {
                n++;
            }
        }
        
        int w = d.getWidth()  - border * (n-1);
        int h = d.getHeight() - border * (n-1);
        
        int x = 0 - border;
        int y = 0 - border;
        
        for ( JInternalFrame f : d.getAllFrames() )
        {
            try
            {
                if ( f.isIcon() == true )
                {
                    continue;
                }
                x += border;
                y += border;
                
                f.setIcon( false );
                f.setMaximum(false);
                f.reshape(x, y, w, h);
            }
            catch(Exception e)
            {
               System.out.println( e.getMessage() );
            }
            finally
            {}
        }    
    }
    
    /**
     * Test the the the table header is changed in code. Passed test. :)
     */
    public void TestSetHeader()
    {
        String s = (String) tFactorB.getTableHeader().getColumnModel()
                .getColumn(0).getHeaderValue();
        
        System.out.println(s);
        
        tFactorB.getTableHeader().getColumnModel().getColumn(0)
            .setHeaderValue("hola amigos :P");
        
        repaint();
        
    }
    
    protected void SetAllFrameHeaders(){
        Factor         factor;
        JInternalFrame frame;
        String t;
                
        for(Map.Entry<Factor, JInternalFrame> pairs: factorFrame.entrySet() )
        {
            factor = pairs.getKey();
            frame  = pairs.getValue();
            t = "table" + factor.getName();
            for(Component c: frame.getComponents())
            {
                if ( c.getName() == t)
                {
                    setHeader( (JTable) c, factor);
                }
            }
        }
    }
    
    
    
    /**
     * set the proper headers in the JTable using the random variables 
     * of a specific factor
     * @param table
     * @param factor 
     */
    protected void setHeader(JTable table, Factor factor){
        
        for(int c = 0; c < table.getColumnCount(); c++ )
        {
            System.out.println( factor.getVars().get(c).getName());
            
            //table.getColumnModel().getColumn(c).
            //        setHeaderValue( factor.vars.get(c).name );
            
            table.getTableHeader().getColumnModel().getColumn(c)
                    .setHeaderValue(factor.getVars().get(c).getName());
        }    
        this.repaint();        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameFactors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameFactors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameFactors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameFactors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new JFrameFactors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopyBtoA;
    private javax.swing.JButton btnFactorProduct;
    private javax.swing.JButton btnLoadSamples;
    private javax.swing.JButton btnMarginalization;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReduction;
    private javax.swing.JButton btnTest;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JInternalFrame frameA;
    private javax.swing.JInternalFrame frameB;
    private javax.swing.JInternalFrame frameC;
    private javax.swing.JInternalFrame frameD;
    private javax.swing.JInternalFrame frameE;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JInternalFrame jInternalFrame4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemCas_lb;
    private javax.swing.JMenuItem jMenuItemCas_lt;
    private javax.swing.JMenuItem jMenuItemCas_rb;
    private javax.swing.JMenuItem jMenuItemCas_rt;
    private javax.swing.JMenuItem jMenuItemHorTile;
    private javax.swing.JMenuItem jMenuItemMax;
    private javax.swing.JMenuItem jMenuItemMin;
    private javax.swing.JMenuItem jMenuItemTile;
    private javax.swing.JMenuItem jMenuItemVerTile;
    private javax.swing.JMenu jMenuWindows;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable tFactorA;
    private javax.swing.JTable tFactorB;
    private javax.swing.JTable tFactorC;
    private javax.swing.JTable tFactorD;
    private javax.swing.JTable tFactorE;
    // End of variables declaration//GEN-END:variables
}
