/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package w1_factors;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DropMode;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 *
 * @author Arturo.Alatriste
 */
public class JFrameReduction 
    extends javax.swing.JFrame 
    implements INewFactorHandler 
{
    private FactorCollection factors;
    protected ArrayList<FactorEventListener> listeners = new ArrayList<FactorEventListener> ();    
    private int id;
    
    FEvaluator evaluator = new FEvaluator();
    
    
    /**
     * Creates new form JFrameReduction
     */
    public JFrameReduction() {
        initComponents();
    }

    public JFrameReduction(FactorCollection factors) {
        initComponents();
        this.factors = factors;
        ini();
    }       
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel_templateFactor = new javax.swing.JLabel();
        jComboBox_Factors = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Conditions = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setForeground(new java.awt.Color(102, 153, 255));

        jLabel1.setText("id");

        jLabel2.setText("Name");

        txtName.setText("NewFactor");

        jLabel_templateFactor.setText("template factor");
        jLabel_templateFactor.setName(""); // NOI18N

        jComboBox_Factors.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_Factors.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_FactorsItemStateChanged(evt);
            }
        });

        jTable_Conditions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Cond Operator", "variable", "Eq Rel Operator", "value"
            }
        ));
        jScrollPane1.setViewportView(jTable_Conditions);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("SELECT rows that satisfy the next conditions");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName)
                            .addComponent(txtId)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_templateFactor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_Factors, 0, 582, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_templateFactor)
                    .addComponent(jComboBox_Factors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        jToolBar1.setRollover(true);

        btnOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/w1_factors/icons/Check_48x48.png"))); // NOI18N
        btnOK.setToolTipText("OK");
        btnOK.setFocusable(false);
        btnOK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOK.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOK);

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/w1_factors/icons/Cancel_48x48.png"))); // NOI18N
        btnCancel.setToolTipText("Cancel");
        btnCancel.setFocusable(false);
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCancel);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/w1_factors/icons/Sign-Add-icon.png"))); // NOI18N
        jButton1.setToolTipText("add condition");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_FactorsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_FactorsItemStateChanged
       
    }//GEN-LAST:event_jComboBox_FactorsItemStateChanged

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed

        try
        {
            Factor f = createFactor();
            FactorCreated factorCreated = new FactorCreated(f);
            OnFactorCreated(factorCreated);
        }
        catch(Exception ex)
        {
            System.out.println( ex.getMessage() );
        }
        finally
        {}

        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    

    public int getId()
    {
        return id;
    }

    public void setId(int id)
    {
        this.id = id;
        this.txtId.setText( Integer.toString(id) );
    }

    public String getText()
    {
        return txtName.getText();
    }    
    
    
    @Override
    public void addNewFactorListener(FactorEventListener listener) {
        listeners.add(listener);
      //listenerList.add(FactorEventListener.class, listener);
    }

    @Override
    public void removeNewFactorListener(FactorEventListener listener) {
        listeners.remove(listener);
      //listenerList.remove(FactorEventListener.class, listener);
    }
    
    @Override
    public void OnFactorCreated( FactorCreated evt)
    {
        for(FactorEventListener h: listeners )
        {
            h.OnFactorCreated(evt);
        }
    }
    
    public void ini()
    {
        FillComboBox();
        this.txtId.setText( "" );
        this.txtName.setText( "" );
        FillTableComboBoxes();
        
    }
    
    private void FillTableComboBoxes()
    {
        try
        {
            //set comboBox for Column "Bool Operator"
            JComboBox cb_Bop = new JComboBox();
            cb_Bop.addItem( "AND" );
            cb_Bop.addItem( "OR" );

            TableColumn bOpColumn = jTable_Conditions.getColumnModel().getColumn( 0 );
            bOpColumn.setCellEditor( new DefaultCellEditor( cb_Bop ) );

            //set combobox for column variable
            JComboBox cb_Var = new JComboBox();
            
            if (factors == null)
            {
                return ;
            }
           
            Factor f = factors.getByName( this.jComboBox_Factors.getSelectedItem().toString() );

            for( int i = 0; i < f.getVars().size(); i++ )
            {
                cb_Var.addItem( f.getVars().get( i ).getDescription() );
            }

            TableColumn varColumn = jTable_Conditions.getColumnModel().getColumn( 1 );
            varColumn.setCellEditor( new DefaultCellEditor( cb_Var ) );

            // set combobox for column "Relational Operator"
            JComboBox cb_Rop = new JComboBox();
            cb_Rop.addItem( "=" );
            cb_Rop.addItem( "!=" );
            cb_Rop.addItem( "in" );
            cb_Rop.addItem( "not in" );
            
            cb_Rop.addItem( ">" );
            cb_Rop.addItem( "<" );
            cb_Rop.addItem( ">=" );
            cb_Rop.addItem( "<=" );

            TableColumn rOpColumn = jTable_Conditions.getColumnModel().getColumn( 2 );
            rOpColumn.setCellEditor( new DefaultCellEditor( cb_Rop ) );

        }
        catch( Exception e )
        {
            System.out.println( e.getMessage() );
        }
        finally
        {}
    
    }
    
    
    
    /**
     * Fill the comboBox for that has a list of Factors
     */    
    public void FillComboBox()
    {
        jComboBox_Factors.removeAllItems();
        for( int i = 0; i < factors.size(); i++  )
        {
            jComboBox_Factors.addItem(  factors.get(i).getName() );
        }
    }    
    

    //todo Reduction: evaluator
    // Condition
    
    //todo Reduction: 
    
    private void setConditions()
    {
        try
        {
            evaluator.CleanConditions();

            for( int r=0; r < jTable_Conditions.getRowCount(); r++ )
            {
                FCondition condition = new FCondition();

                if (jTable_Conditions.getValueAt(r, 0) != null) 
                    condition.setBoolOperator ( jTable_Conditions.getValueAt(r, 0).toString() );
                
                if (jTable_Conditions.getValueAt(r, 1) != null) 
                    condition.setvarDecription(jTable_Conditions.getValueAt(r, 1).toString() );
                
                if (jTable_Conditions.getValueAt(r, 2) != null) 
                    condition.setRelOperator  ( jTable_Conditions.getValueAt(r, 2).toString() );
                
                if (jTable_Conditions.getValueAt(r, 3) != null) 
                    condition.setValues       ( jTable_Conditions.getValueAt(r, 3).toString() );

                if ( !condition.isEmpty() )
                {
                    evaluator.addCondition( condition );
                }
            }
        }
        catch(Exception e)
        {
            System.out.println( e.getMessage() );
        }
        finally
        {}
    }
    
    public Factor createFactor() throws Exception
    {
        try 
        {
            Factor f = new Factor( this.getId(), this.getText() );
            setConditions();
            
            // factor used as base, as reference.
            Factor baseFactor = factors.getByName( this.jComboBox_Factors.getSelectedItem().toString() );
            //JTable baseT = baseFactor.getTable();
            
            Hashtable<String, String> values = new Hashtable<String, String>();
            String varDesc;

            
            for(int r=0; r < baseFactor.getRowCount(); r++ )
            {
                // get varValues from baseFactor Row
                values.clear();
                //for(int i = 0; i < jTable_Conditions.getRowCount(); i++ )
                for(int i = 0; i < evaluator.getConditionsCount(); i++ )
                {
                    
                   varDesc = evaluator.getConditions().get( i ).getVarDecription();
                           //jTable_Conditions.getValueAt(i, 1).toString();
                           
                    if ( baseFactor.getVars().getByDescription( varDesc ) != null )
                    {                
                        values.put( varDesc, // varDescription
                                    baseFactor.getCell(r, varDesc) ); // var value
                    }
                }
                evaluator.setValues(values);
                
                // add row to new factor
                if (evaluator.Evaluate( ) == true )
                { 
                    f.addRow( baseFactor, r );
                }            
                
            }
            
            
            
            
            
            /*
            for(String s: this.getincludedVars() )
            {
                f.getVars().add( vars.getByDescription(s) );
            }
            f.FillTable();
            */
            return f;
        } 
        catch (Exception ex) 
        {
            //Logger.getLogger(JFrameFactors.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println( ex.getMessage() );
            throw new Exception(ex);
        }
        finally
        {
            System.out.println( "end of New Factors" );
        }
    }    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameReduction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameReduction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameReduction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameReduction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameReduction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox_Factors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_templateFactor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Conditions;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
